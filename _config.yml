# Site settings
title: Jie Dou
#twitter_username: rob_hinds
name: Jie Dou

# Build settings
markdown: kramdown

#User specific content
#Links that will appear in the navbar
primarylinks:
 - title: Blog
   url: http://automateddeveloper.blogspot.com/
 - title: GitHub
   url: https://github.com/jiedou88
 - title: StackOverflow
   url: http://stackoverflow.com/users/258813/rhinds
# - title: DZone
#   url: https://dzone.com/users/899489/rhinds.html
# - title: LinkedIn
#   url: https://www.linkedin.com/pub/rob-hinds/21/361/3b1

#Any buzzword skills you want to include
skills:
 - Web Development
 - Asp.net Core
 - Angular JS
 - HTML5
 - JavaScript
 - Azure Cosmos DB
 - SQL
 - REST API
 - Swift

#Blogfeed is optional - including this will add JS to call the feed and populate blog list
#blogfeed: http://automateddeveloper.blogspot.com/feeds/posts/default?alt=rss

#Work experience is required
roles:
 - title: Lead Developer
   start: 2016
   end: Ongoing
   employer: Enterprise Application Branch,Treasury Board Secretariat,Ontario
   description: Enterprise Application was established as an branch for the development of a number of software and website projects for Ontario Public Service, and a rapidly growing, branch using innovative technologies to revolutionise and change the software and legal-tech landscape. Working with a range of cutting edge technologies and techniques including Azure cloud, Cosmos DB, a variety of techniques.
 #- title: Senior Engineer
   #start: 2012
   #end: 2016
   #employer: Covestor
   #description: Covestor is an investment marketplace startup that was successfully acquired by Interactive Brokers in 2015. <br/> I am a senior engineer working closely with the CTO, working across the full-stack, I am involved in all aspects of the technology including the website and back-end services.
 #- title: Associate Manager
   #start: 2005
   #end: 2012
   #employer: Accenture
   #description: A range of functional and technical roles, primarily working on client sites in Financial Services.



#This section is optional (as is the image link below)
#coursera:
   #profileurl: https://www.coursera.org/user/i/c6362b4056f755a04bef6a791a62102b
   #courses:
    #- title: Functional Programming Principles in Scala
      #link: https://www.coursera.org/course/progfun
      #optionalimage: https://d1z850dzhxs7de.cloudfront.net/topics/progfun/small-icon.hover.png
      #date: September 16, 2013
    #- title: Algorithms Design and Analysis, Part 1
      #link: https://www.coursera.org/course/progfun
      #optionalimage: https://d1z850dzhxs7de.cloudfront.net/topics/algo/small-icon.hover.png
      #date: April 28, 2014

#List of interesting Github repo/projects to include - optional
github:
 - jiedou88/StockMarket
 - jiedou88/Location-Acquisition-Website
 - jiedou88/Tanks-Game
 - jiedou88/Ball-Game
 - jiedou88/Credit-Card-Application
 - jiedou88/Student-Course-Enrollment-Management-System
 

#Stackoverflow flair is optional
#stackoverflow:
   #profileurl: http://stackoverflow.com/users/258813/rhinds
   #flairimageurl: http://stackoverflow.com/users/flair/258813.png

#Mobile apps section is optional
apps:
 - name: Stock Market
   platform: IOS
   url: https://play.google.com/store/apps/details?id=com.tmm.android.chuck&feature=search_result#?t=W251bGwsMSwxLDEsImNvbS50bW0uYW5kcm9pZC5jaHVjayJd
   description: A basic Stock Market IOS app (open sourced)

#An additional info freetext section is optional at the bottom of the page - can be text or HTML
additionalinfo: |
   <strong>Submission Management Backend (API)，OnTrack</strong>: Server-side web development experience has largely been based on the ASP.NET Core framework. 
Designed and developed backend API allow UI to retrieve and modify data; Implemented 4 data type Web API (email; file download and upload; submission items and standards reference data);
Implemented data storage in memory caching in Asp.Net Core; 
Implemented authorization web API with JWTbearer middleware in Asp.Net Core 2.0;
Implemented multiple Azure cosmos database store procedure scripts for Date migration; 
Performed unit test and web load test; 
Deployed to Azure production environment; Implemented production database migration script; 
Logged request and response metadata in web API with Azure Application Insight; Supported roughly 300 ministry users and 723 financial items in production application in total right now.
<br/><br/>
<strong>Submission Management FrontEnd (UI)，OnTrack</strong>: Participated in developing and testing UI. 
Implemented dynamic graph to visualize data in UI for a submission scheduling history for better user experience;
<br/><br/>
<strong>Commitment Tracker Project Dashboard (UI)，OnTrack</strong>: Implemented dashboard chart component with framework PrimeNG and Chart.js; Demonstrate to clients and other stakeholders; 
Developed and recommended solutions that meet requirements for CT dashboard;
<br/><br/>
<strong>Premier Certificate Website Project</strong>: •	Frontend: AngularJS 2, JQuery, PrimeNG, Bootstrap
Implemented dashboard chart component with Chart.js; 
Implemented Routing to navigate between the side bar and different components; 
Implemented dynamic form for creating new request with dynamic data binding metadata and adding validation dynamically;
Designed Search page UI and Implement with Bootstrap and PrimeNG;
Implemented data CURD with corresponding HTTP calls to a remote server's web API;
Cached data in Local Storage and Session Storage
•	Backend: C# Asp.Net Core Web API, HTTP, RESTful services.  
Participated in the planning of API development;
Implemented web API for data CURD;
Implemented API for uploading and downloading file;
Implemented data storage in memory caching in Asp.Net Core; 
Implemented authorization web API with JWTbearer middleware in Asp.Net Core;
Cached data in server memory
•	Database: 
Created store procedure for API for request CRUD;
Improved search stored procedure with dynamic SQL;
•	Microsoft Azure cloud: authentication, authorization, OAuth 2. 
Created and published web admin app and web API to Azure AD
      Configured Azure AD Authentication and Authorization for web app and web API
•	Automation Test: Unit Test
Cross browser test, web performance test, web load test

<br/><br/>

   <strong>Development Control</strong>: I have a good knowledge of application life-cycle management and have worked with SVN, Git, Maven, Gradle, Sonar and Jenkins. I have experience with an array of testing tools and technologies.<br/><br/>
   I have also gained experience and knowledge of other technologies from several side projects and research that I have undertaken in my free time, including Android, a variety of social APIs (Twitter etc) and cloud platforms such as CloudFoundry/OpenShift/AppFog/Parse. <br/><br/>
   As part of Nerdability, I created, and am now primary contributor to projects <br/><br/>
   I write a blog covering technical and opinion articles that can be found here: <a target='_blank' href="https://medium.com/@douketty/how-to-build-a-online-chat-using-angular-and-asp-net-core-2-1-fae7cdc62c44?sk=63bae86b773b4aec126040d7b1537803"><br/><br/>
   
   <strong>TFS Load Test</strong>: Planned test cases,Wrote test script and develop a testing environment.

   
#Education is required
education:
 - level: Diploma 
   date: 2016
   subject: Computer Programmer
   school: Seneca College
 - level: Master (M.Sc.)
   date: 2002
   subject: Management Science and Engineering
   school: Beijing University of Technology
